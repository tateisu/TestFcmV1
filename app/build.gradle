import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'

android {

    // exoPlayer 2.9.0 以降は Java 8 compiler support を要求する
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    compileSdk 32

    defaultConfig {
        applicationId "jp.juggler.testfcmv1"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }

    viewBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    // buildTypes より先に定義すること
    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword 'qwerty'
            storeFile file("$rootDir/TestFcmV1.jks")
            storePassword 'qwerty'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            lintOptions {
                disable 'MissingTranslation'
            }
            signingConfig signingConfigs.release
            debuggable true
        }
    }


    // Generate Signed APK のファイル名を変更
    android.applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.outputs.all {
                // Rename APK
                def versionCode = defaultConfig.versionCode
                def versionName = defaultConfig.versionName
                def flavor = variant.flavorName
                def date = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date())
                def branch = gitBranch()
                outputFileName = "../../SubwayTooter-${branch}-${flavor}-${versionCode}-${versionName}-${date}.apk"
            }
        }
    }

    packagingOptions {
        // https://github.com/Kotlin/kotlinx.coroutines/issues/1064
        pickFirst("META-INF/atomicfu.kotlin_module")
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
        exclude 'META-INF/DEPENDENCIES'
    }

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    lintOptions {
        warning 'DuplicatePlatformClasses'
    }
}

static def gitBranch() {
    def branch = "(no branch)"
    def proc = "git status".execute()
    proc.in.eachLine { line ->
        def matcher = line =~ /\AOn branch (\S+)/
        if (matcher) branch = matcher.group(1)
    }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}

kapt {
    useBuildCache = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.compose.ui:ui:1.1.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    def coroutines_version="1.6.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"

    def lifecycle_version = "2.4.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    implementation "com.google.firebase:firebase-messaging:23.0.5"
}
